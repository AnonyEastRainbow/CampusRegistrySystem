# Unique name for this workflow
name: Deploy changed sources to org

# Definition when the workflow should run
on:
  push:
    branches: [ SIT, UAT, PreProd, main ]
    paths:
      - 'force-app/**'


# Jobs to be executed
jobs:
  deploy-changed-sources-to-org:
    name: Deploy changed sources to org
    runs-on: ubuntu-latest
    if: ${{ github.actor != 'dependabot[bot]' }}
    permissions:
      contents: read
      pull-requests: read
    steps:
      # Install node.js in the VM, and specify version 20
      - name: 'Setup node.js version'
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # Checkout the source code
      - name: 'Checkout source code'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Query Pull Requests associated with current commit by GitHub API
      - name: 'Query Pull Requests associated with current commit by GitHub API'
        uses: actions/github-script@v7
        id: get_pr_data
        with:
          script: |
              return (
                await github.rest.repos.listPullRequestsAssociatedWithCommit({
                  commit_sha: context.sha,
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                })
              ).data;
      
      # Parse test classes to run
      - name: 'Parse test classes to run from Pull Request description'
        if: ${{ fromJson(steps.get_pr_data.outputs.result)[0] }}
        env:
          PR_BODY: ${{ fromJson(steps.get_pr_data.outputs.result)[0].body }}
        run: |
          echo Pull Request number: ${{ fromJson(steps.get_pr_data.outputs.result)[0].number }}
          echo Pull Request title: ${{ fromJson(steps.get_pr_data.outputs.result)[0].title }}
          echo Pull Request description: ${{ env.PR_BODY }}
          echo $PR_BODY > ./cicd/pr_body.txt
          node ./cicd/parsePR.js
          testsToRun=$(cat ./cicd/testsToRun.txt)
          echo Tests to run: $testsToRun
          echo "apexTestsToRun=$testsToRun" >> $GITHUB_ENV

      # Install Salesforce CLI
      - name: 'Install Salesforce CLI'
        run: |
          wget https://developer.salesforce.com/media/salesforce-cli/sf/channels/stable/sf-linux-x64.tar.xz
          mkdir -p ~/cli/sf
          tar xJf sf-linux-x64.tar.xz -C ~/cli/sf --strip-components 1
          echo "~/cli/sf/bin" >> $GITHUB_PATH
          ~/cli/sf/bin/sf version

      # Store auth file for org
      - name: 'Populate auth file(SIT)'
        if: ${{ github.ref_name == 'SIT' }}
        shell: bash
        run: |
          echo "${{ secrets.SFDX_SIT_ORG_AUTH }}" > ./SFDX_ORG_AUTH.json

      - name: 'Populate auth file(UAT)'
        if: ${{ github.ref_name == 'UAT' }}
        shell: bash
        run: |
          echo "${{ secrets.SFDX_UAT_ORG_AUTH }}" > ./SFDX_ORG_AUTH.json

      - name: 'Populate auth file(PreProd)'
        if: ${{ github.ref_name == 'PreProd' }}
        shell: bash
        run: |
          echo "${{ secrets.SFDX_PreProd_ORG_AUTH }}" > ./SFDX_ORG_AUTH.json

      - name: 'Populate auth file(Production)'
        if: ${{ github.ref_name == 'main' }}
        shell: bash
        run: |
          echo "${{ secrets.SFDX_Prod_ORG_AUTH }}" > ./SFDX_ORG_AUTH.json

      # Authenticate to org
      - name: 'Authenticate to org'
        run: sfdx auth:sfdxurl:store --sfdxurlfile ./SFDX_ORG_AUTH.json --setdefaultusername

      # Install SFDX-Git-Delta plugin - https://github.com/scolladon/sfdx-git-delta
      - name: 'Install sfdx git delta'
        run: |
          sfdx version
          echo y | sfdx plugins:install sfdx-git-delta
          sfdx plugins

      # Use SFDX Git Delta to create a directory with only the metadata that has changed.
      - name: 'Create delta packages for new, modified or deleted metadata'
        run: |
          mkdir changed-sources
          sfdx sgd:source:delta --to "HEAD" --from "HEAD^" --output changed-sources/ --generate-delta --source force-app/

      # Upload delta packages to Artifact for download
      - name: Upload delta packages to Artifact
        uses: actions/upload-artifact@v4
        with:
          name: changed-sources-package
          path: changed-sources/

      # Deploy delta changes to org
      - name: 'Deploy delta changes to org - skip tests'
        if: ${{ env.apexTestsToRun == '' }}
        run: |
          sfdx force:source:deploy --sourcepath "changed-sources/force-app" --verbose

      - name: 'Deploy delta changes to org - run specified tests'
        if: ${{ env.apexTestsToRun != '' && env.apexTestsToRun != 'all' }}
        run: |
          sfdx force:source:deploy --sourcepath "changed-sources/force-app" --testlevel RunSpecifiedTests --runtests ${{env.apexTestsToRun}} --verbose

      # If the env variable equals all, we run all tests
      - name: 'Deploy delta changes to org - run all tests'
        if: ${{ env.apexTestsToRun == 'all' }}
        run: |
          sfdx force:source:deploy --sourcepath "changed-sources/force-app" --testlevel RunLocalTests --verbose